// Generated from grammars/OurScheme.g4 by ANTLR 4.13.2
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,12,108,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,1,0,1,
0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,3,4,35,8,4,1,4,4,4,38,8,4,11,4,12,4,39,1,5,
3,5,43,8,5,1,5,4,5,46,8,5,11,5,12,5,47,1,5,1,5,5,5,52,8,5,10,5,12,5,55,9,
5,1,5,1,5,4,5,59,8,5,11,5,12,5,60,3,5,63,8,5,1,6,1,6,1,6,1,6,5,6,69,8,6,
10,6,12,6,72,9,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,3,7,81,8,7,1,8,1,8,1,8,3,8,
86,8,8,1,9,4,9,89,8,9,11,9,12,9,90,1,10,4,10,94,8,10,11,10,12,10,95,1,10,
1,10,1,11,1,11,5,11,102,8,11,10,11,12,11,105,9,11,1,11,1,11,0,0,12,1,1,3,
2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,1,0,6,2,0,43,43,45,45,
1,0,48,57,2,0,34,34,92,92,8,0,33,33,36,38,42,47,58,58,60,90,94,95,97,122,
126,126,3,0,9,10,13,13,32,32,2,0,10,10,13,13,121,0,1,1,0,0,0,0,3,1,0,0,0,
0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,
0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,1,25,1,0,0,0,3,27,
1,0,0,0,5,29,1,0,0,0,7,31,1,0,0,0,9,34,1,0,0,0,11,42,1,0,0,0,13,64,1,0,0,
0,15,80,1,0,0,0,17,85,1,0,0,0,19,88,1,0,0,0,21,93,1,0,0,0,23,99,1,0,0,0,
25,26,5,40,0,0,26,2,1,0,0,0,27,28,5,41,0,0,28,4,1,0,0,0,29,30,5,46,0,0,30,
6,1,0,0,0,31,32,5,39,0,0,32,8,1,0,0,0,33,35,7,0,0,0,34,33,1,0,0,0,34,35,
1,0,0,0,35,37,1,0,0,0,36,38,7,1,0,0,37,36,1,0,0,0,38,39,1,0,0,0,39,37,1,
0,0,0,39,40,1,0,0,0,40,10,1,0,0,0,41,43,7,0,0,0,42,41,1,0,0,0,42,43,1,0,
0,0,43,62,1,0,0,0,44,46,7,1,0,0,45,44,1,0,0,0,46,47,1,0,0,0,47,45,1,0,0,
0,47,48,1,0,0,0,48,49,1,0,0,0,49,53,5,46,0,0,50,52,7,1,0,0,51,50,1,0,0,0,
52,55,1,0,0,0,53,51,1,0,0,0,53,54,1,0,0,0,54,63,1,0,0,0,55,53,1,0,0,0,56,
58,5,46,0,0,57,59,7,1,0,0,58,57,1,0,0,0,59,60,1,0,0,0,60,58,1,0,0,0,60,61,
1,0,0,0,61,63,1,0,0,0,62,45,1,0,0,0,62,56,1,0,0,0,63,12,1,0,0,0,64,70,5,
34,0,0,65,66,5,92,0,0,66,69,9,0,0,0,67,69,8,2,0,0,68,65,1,0,0,0,68,67,1,
0,0,0,69,72,1,0,0,0,70,68,1,0,0,0,70,71,1,0,0,0,71,73,1,0,0,0,72,70,1,0,
0,0,73,74,5,34,0,0,74,14,1,0,0,0,75,76,5,110,0,0,76,77,5,105,0,0,77,81,5,
108,0,0,78,79,5,35,0,0,79,81,5,102,0,0,80,75,1,0,0,0,80,78,1,0,0,0,81,16,
1,0,0,0,82,86,5,116,0,0,83,84,5,35,0,0,84,86,5,116,0,0,85,82,1,0,0,0,85,
83,1,0,0,0,86,18,1,0,0,0,87,89,7,3,0,0,88,87,1,0,0,0,89,90,1,0,0,0,90,88,
1,0,0,0,90,91,1,0,0,0,91,20,1,0,0,0,92,94,7,4,0,0,93,92,1,0,0,0,94,95,1,
0,0,0,95,93,1,0,0,0,95,96,1,0,0,0,96,97,1,0,0,0,97,98,6,10,0,0,98,22,1,0,
0,0,99,103,5,59,0,0,100,102,8,5,0,0,101,100,1,0,0,0,102,105,1,0,0,0,103,
101,1,0,0,0,103,104,1,0,0,0,104,106,1,0,0,0,105,103,1,0,0,0,106,107,6,11,
0,0,107,24,1,0,0,0,15,0,34,39,42,47,53,60,62,68,70,80,85,90,95,103,1,6,0,
0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class OurSchemeLexer extends antlr4.Lexer {

    static grammarFileName = "OurScheme.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'('", "')'", "'.'", "'''" ];
	static symbolicNames = [ null, "LEFT_PAREN", "RIGHT_PAREN", "DOT", "QUOTE", 
                          "INT", "FLOAT", "STRING", "NIL", "T", "SYMBOL", 
                          "WS", "COMMENT" ];
	static ruleNames = [ "LEFT_PAREN", "RIGHT_PAREN", "DOT", "QUOTE", "INT", 
                      "FLOAT", "STRING", "NIL", "T", "SYMBOL", "WS", "COMMENT" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

OurSchemeLexer.EOF = antlr4.Token.EOF;
OurSchemeLexer.LEFT_PAREN = 1;
OurSchemeLexer.RIGHT_PAREN = 2;
OurSchemeLexer.DOT = 3;
OurSchemeLexer.QUOTE = 4;
OurSchemeLexer.INT = 5;
OurSchemeLexer.FLOAT = 6;
OurSchemeLexer.STRING = 7;
OurSchemeLexer.NIL = 8;
OurSchemeLexer.T = 9;
OurSchemeLexer.SYMBOL = 10;
OurSchemeLexer.WS = 11;
OurSchemeLexer.COMMENT = 12;



